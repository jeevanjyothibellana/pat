# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def splitListToParts(self, head, k):
        """
        :type head: ListNode
        :type k: int
        :rtype: List[ListNode]
        """
        a=[]
        length = 0
        temp = head
        while temp:
            length += 1
            temp = temp.next
        # print(length)
        q,rem = divmod(length,k)
        current = head
        for i in range(k):
            dummy = write = ListNode(0)
            for j in range (q+(i<rem)):
                if current:
                    write.next = write=ListNode(current.val)
                    current = current.next
            a.append(dummy.next) 
        return a
